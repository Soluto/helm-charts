{{- $ca := genCA "kamus-ca" 3650 -}}
{{- $altNames := list ( printf "%s-controller.%s" (include "kamus.name" .) .Release.Namespace ) ( printf "%s-controller.%s.svc" (include "kamus.name" .) .Release.Namespace ) -}}
{{- $cn := include "kamus.name" . -}}
{{- $cert := genSignedCert $cn nil $altNames 3650 $ca -}}
{{- $kube115orHigher := semverCompare ">=1.15-0" .Capabilities.KubeVersion.GitVersion}}

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kamussecrets.soluto.com
spec:
  {{- if $kube115orHigher}}
  preserveUnknownFields: false
  {{- end }}
  group: soluto.com
  versions:
  - name: v1alpha1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          data:
            type: object
            additionalProperties: true
          serviceAccount: 
            type: string
          type:
            type: string
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          data:
            type: object
            additionalProperties: true
          stringData:
            type: object
            additionalProperties: true
          serviceAccount: 
            type: string
          type:
            type: string
  scope: Namespaced
  names:
    plural: kamussecrets
    singular: kamussecret
    kind: KamusSecret
    shortNames:
     - ks
  {{- if or $kube115orHigher .Values.crdConersationEnabled }}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: {{ template "kamus.name" . }}-controller
        path: /api/v1/conversion-webhook
      caBundle: {{ b64enc $ca.Cert }}
  {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kamus.name" . }}-controller
type: Opaque
data:
  certificate.crt: {{ b64enc $cert.Cert }}
  privateKey.key: {{ b64enc $cert.Key }}